JAVA PROFILE 1.0.1, created Thu Dec  7 14:02:02 2017

Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

  - Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.

  - Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.

  - Neither the name of Oracle nor the names of its
    contributors may be used to endorse or promote products derived
    from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Header for -agentlib:hprof (or -Xrunhprof) ASCII Output (JDK 5.0 JVMTI based)

WARNING!  This file format is under development, and is subject to
change without notice.

This file contains the following types of records:

THREAD START
THREAD END      mark the lifetime of Java threads

TRACE           represents a Java stack trace.  Each trace consists
                of a series of stack frames.  Other records refer to
                TRACEs to identify (1) where object allocations have
                taken place, (2) the frames in which GC roots were
                found, and (3) frequently executed methods.

HEAP DUMP       is a complete snapshot of all live objects in the Java
                heap.  Following distinctions are made:

                ROOT    root set as determined by GC
                CLS     classes 
                OBJ     instances
                ARR     arrays

SITES           is a sorted list of allocation sites.  This identifies
                the most heavily allocated object types, and the TRACE
                at which those allocations occurred.

CPU SAMPLES     is a statistical profile of program execution.  The VM
                periodically samples all running threads, and assigns
                a quantum to active TRACEs in those threads.  Entries
                in this record are TRACEs ranked by the percentage of
                total quanta they consumed; top-ranked TRACEs are
                typically hot spots in the program.

CPU TIME        is a profile of program execution obtained by measuring
                the time spent in individual methods (excluding the time
                spent in callees), as well as by counting the number of
                times each method is called. Entries in this record are
                TRACEs ranked by the percentage of total CPU time. The
                "count" field indicates the number of times each TRACE 
                is invoked.

MONITOR TIME    is a profile of monitor contention obtained by measuring
                the time spent by a thread waiting to enter a monitor.
                Entries in this record are TRACEs ranked by the percentage
                of total monitor contention time and a brief description
                of the monitor.  The "count" field indicates the number of 
                times the monitor was contended at that TRACE.

MONITOR DUMP    is a complete snapshot of all the monitors and threads in 
                the System.

HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
at program exit.  They can also be obtained during program execution by typing 
Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).

--------

THREAD START (obj=50000180, id = 200002, name="HPROF gc_finish watcher", group="system")
THREAD START (obj=50000195, id = 200001, name="main", group="main")
THREAD END (id = 200001)
THREAD START (obj=50000195, id = 200003, name="DestroyJavaVM", group="main")
THREAD END (id = 200003)
TRACE 302611:
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302462:
	java.util.Random.next(Random.java:Unknown line)
	java.util.Random.nextInt(Random.java:Unknown line)
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302466:
	java.lang.Integer.valueOf(Integer.java:Unknown line)
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302499:
	HashMapSub4.hash(HashMapSub4.java:Unknown line)
	HashMapSub4.find(HashMapSub4.java:Unknown line)
	HashMapSub4.has(HashMapSub4.java:Unknown line)
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302481:
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302475:
	java.lang.Integer.hashCode(Integer.java:Unknown line)
	HashMapSub4.hash(HashMapSub4.java:Unknown line)
	HashMapSub4.hash(HashMapSub4.java:Unknown line)
	HashMapSub4.place(HashMapSub4.java:Unknown line)
TRACE 302477:
	HashMapSub4.hash(HashMapSub4.java:Unknown line)
	HashMapSub4.hash(HashMapSub4.java:Unknown line)
	HashMapSub4.place(HashMapSub4.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
TRACE 302463:
	java.util.Random.nextInt(Random.java:Unknown line)
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302470:
	HashMapSub4.hash(HashMapSub4.java:Unknown line)
	HashMapSub4.find(HashMapSub4.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302465:
	java.lang.Integer.<init>(Integer.java:Unknown line)
	java.lang.Integer.valueOf(Integer.java:Unknown line)
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302488:
	HashMapSub4.place(HashMapSub4.java:Unknown line)
	HashMapSub4.rehash(HashMapSub4.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
TRACE 302489:
	HashMapSub4.hash(HashMapSub4.java:Unknown line)
	HashMapSub4.hash(HashMapSub4.java:Unknown line)
	HashMapSub4.place(HashMapSub4.java:Unknown line)
	HashMapSub4.rehash(HashMapSub4.java:Unknown line)
TRACE 302500:
	HashMapSub4.find(HashMapSub4.java:Unknown line)
	HashMapSub4.has(HashMapSub4.java:Unknown line)
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302497:
	java.lang.Integer.hashCode(Integer.java:Unknown line)
	HashMapSub4.hash(HashMapSub4.java:Unknown line)
	HashMapSub4.find(HashMapSub4.java:Unknown line)
	HashMapSub4.has(HashMapSub4.java:Unknown line)
TRACE 302471:
	HashMapSub4.find(HashMapSub4.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302480:
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302491:
	HashMapSub4.rehash(HashMapSub4.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302478:
	HashMapSub4.hash(HashMapSub4.java:Unknown line)
	HashMapSub4.place(HashMapSub4.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
TRACE 302468:
	java.lang.Integer.hashCode(Integer.java:Unknown line)
	HashMapSub4.hash(HashMapSub4.java:Unknown line)
	HashMapSub4.find(HashMapSub4.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
TRACE 302479:
	HashMapSub4.place(HashMapSub4.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302501:
	HashMapSub4.has(HashMapSub4.java:Unknown line)
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302474:
	java.lang.Integer.hashCode(Integer.java:Unknown line)
	java.lang.Integer.hashCode(Integer.java:Unknown line)
	HashMapSub4.hash(HashMapSub4.java:Unknown line)
	HashMapSub4.hash(HashMapSub4.java:Unknown line)
TRACE 302460:
	java.util.concurrent.atomic.AtomicLong.get(AtomicLong.java:Unknown line)
	java.util.Random.next(Random.java:Unknown line)
	java.util.Random.nextInt(Random.java:Unknown line)
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302467:
	java.lang.Integer.hashCode(Integer.java:Unknown line)
	java.lang.Integer.hashCode(Integer.java:Unknown line)
	HashMapSub4.hash(HashMapSub4.java:Unknown line)
	HashMapSub4.find(HashMapSub4.java:Unknown line)
TRACE 302476:
	UniversalHashes$2.hash(UniversalHashes.java:Unknown line)
	HashMapSub4.hash(HashMapSub4.java:Unknown line)
	HashMapSub4.hash(HashMapSub4.java:Unknown line)
	HashMapSub4.place(HashMapSub4.java:Unknown line)
TRACE 302464:
	java.lang.Number.<init>(Number.java:Unknown line)
	java.lang.Integer.<init>(Integer.java:Unknown line)
	java.lang.Integer.valueOf(Integer.java:Unknown line)
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302490:
	HashMapSub4.hash(HashMapSub4.java:Unknown line)
	HashMapSub4.place(HashMapSub4.java:Unknown line)
	HashMapSub4.rehash(HashMapSub4.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
TRACE 302461:
	java.util.concurrent.atomic.AtomicLong.compareAndSet(AtomicLong.java:Unknown line)
	java.util.Random.next(Random.java:Unknown line)
	java.util.Random.nextInt(Random.java:Unknown line)
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302469:
	UniversalHashes$2.hash(UniversalHashes.java:Unknown line)
	HashMapSub4.hash(HashMapSub4.java:Unknown line)
	HashMapSub4.find(HashMapSub4.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
TRACE 302498:
	UniversalHashes$2.hash(UniversalHashes.java:Unknown line)
	HashMapSub4.hash(HashMapSub4.java:Unknown line)
	HashMapSub4.find(HashMapSub4.java:Unknown line)
	HashMapSub4.has(HashMapSub4.java:Unknown line)
TRACE 302503:
	java.lang.Integer.equals(Integer.java:Unknown line)
	HashMapSub4.find(HashMapSub4.java:Unknown line)
	HashMapSub4.has(HashMapSub4.java:Unknown line)
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302473:
	HashMapSub4.loadFactor(HashMapSub4.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302472:
	HashMapSub4$Entry.<init>(HashMapSub4.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302483:
	java.lang.Integer.equals(Integer.java:Unknown line)
	HashMapSub4.find(HashMapSub4.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302502:
	java.lang.Integer.intValue(Integer.java:Unknown line)
	java.lang.Integer.equals(Integer.java:Unknown line)
	HashMapSub4.find(HashMapSub4.java:Unknown line)
	HashMapSub4.has(HashMapSub4.java:Unknown line)
TRACE 302482:
	java.lang.Integer.intValue(Integer.java:Unknown line)
	java.lang.Integer.equals(Integer.java:Unknown line)
	HashMapSub4.find(HashMapSub4.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
TRACE 302495:
	java.lang.RuntimeException.<init>(RuntimeException.java:Unknown line)
	java.lang.IllegalArgumentException.<init>(IllegalArgumentException.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302494:
	java.lang.Exception.<init>(Exception.java:Unknown line)
	java.lang.RuntimeException.<init>(RuntimeException.java:Unknown line)
	java.lang.IllegalArgumentException.<init>(IllegalArgumentException.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
TRACE 302493:
	java.lang.Throwable.<init>(Throwable.java:Unknown line)
	java.lang.Exception.<init>(Exception.java:Unknown line)
	java.lang.RuntimeException.<init>(RuntimeException.java:Unknown line)
	java.lang.IllegalArgumentException.<init>(IllegalArgumentException.java:Unknown line)
TRACE 302496:
	java.lang.IllegalArgumentException.<init>(IllegalArgumentException.java:Unknown line)
	HashMapSub4.insert(HashMapSub4.java:Unknown line)
	HashMapSub4.main(HashMapSub4.java:Unknown line)
TRACE 302492:
	java.lang.Throwable.fillInStackTrace(Throwable.java:Unknown line)
	java.lang.Throwable.<init>(Throwable.java:Unknown line)
	java.lang.Exception.<init>(Exception.java:Unknown line)
	java.lang.RuntimeException.<init>(RuntimeException.java:Unknown line)
TRACE 301104:
	java.util.zip.ZipFile.<init>(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.<init>(ZipFile.java:Unknown line)
	java.util.jar.JarFile.<init>(JarFile.java:Unknown line)
	java.util.jar.JarFile.<init>(JarFile.java:Unknown line)
TRACE 300726:
	java.lang.String.charAt(String.java:Unknown line)
	java.io.UnixFileSystem.normalize(UnixFileSystem.java:Unknown line)
	java.io.File.<init>(File.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
TRACE 300757:
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
TRACE 300784:
	java.lang.String.startsWith(String.java:Unknown line)
	sun.misc.MetaIndex.mayContain(MetaIndex.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.getResource(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getResource(URLClassPath.java:Unknown line)
TRACE 300785:
	sun.misc.MetaIndex.mayContain(MetaIndex.java:Unknown line)
	sun.misc.URLClassPath$JarLoader.getResource(URLClassPath.java:Unknown line)
	sun.misc.URLClassPath.getResource(URLClassPath.java:Unknown line)
	java.net.URLClassLoader$1.run(URLClassLoader.java:Unknown line)
TRACE 300163:
	java.lang.invoke.MethodHandle.<clinit>(MethodHandle.java:Unknown line)
TRACE 300492:
	sun.misc.PostVMInitHook.trackJavaUsage(PostVMInitHook.java:Unknown line)
	sun.misc.PostVMInitHook.run(PostVMInitHook.java:Unknown line)
CPU TIME (ms) BEGIN (total = 10478) Thu Dec  7 14:02:13 2017
rank   self  accum   count trace method
   1  8.46%  8.46%       1 302611 HashMapSub4.main
   2  6.67% 15.13%  200033 302462 java.util.Random.next
   3  4.96% 20.09%  300000 302466 java.lang.Integer.valueOf
   4  4.59% 24.68%  129315 302499 HashMapSub4.hash
   5  4.59% 29.27%  100000 302481 HashMapSub4.insert
   6  4.33% 33.60%  230053 302475 java.lang.Integer.hashCode
   7  4.17% 37.77%  130240 302477 HashMapSub4.hash
   8  4.16% 41.94%  200000 302463 java.util.Random.nextInt
   9  3.97% 45.91%  123190 302470 HashMapSub4.hash
  10  3.84% 49.74%  199974 302465 java.lang.Integer.<init>
  11  3.03% 52.78%  262128 302488 HashMapSub4.place
  12  3.03% 55.80%   99813 302489 HashMapSub4.hash
  13  3.01% 58.81%  100000 302500 HashMapSub4.find
  14  2.88% 61.69%  129315 302497 java.lang.Integer.hashCode
  15  2.80% 64.49%  100000 302471 HashMapSub4.find
  16  2.77% 67.26%   95133 302480 HashMapSub4.insert
  17  2.64% 69.90%      14 302491 HashMapSub4.rehash
  18  2.56% 72.46%  130240 302478 HashMapSub4.hash
  19  2.40% 74.85%  123190 302468 java.lang.Integer.hashCode
  20  2.36% 77.21%   95142 302479 HashMapSub4.place
  21  2.33% 79.54%  100000 302501 HashMapSub4.has
  22  2.01% 81.55%  230053 302474 java.lang.Integer.hashCode
  23  1.98% 83.53%  200033 302460 java.util.concurrent.atomic.AtomicLong.get
  24  1.98% 85.50%  252505 302467 java.lang.Integer.hashCode
  25  1.86% 87.36%  230053 302476 UniversalHashes$2.hash
  26  1.79% 89.16%  199974 302464 java.lang.Number.<init>
  27  1.71% 90.87%   99813 302490 HashMapSub4.hash
  28  1.57% 92.44%  200033 302461 java.util.concurrent.atomic.AtomicLong.compareAndSet
  29  1.09% 93.53%  123190 302469 UniversalHashes$2.hash
  30  1.06% 94.59%  129315 302498 UniversalHashes$2.hash
  31  1.06% 95.65%   48973 302503 java.lang.Integer.equals
  32  0.82% 96.47%   95133 302473 HashMapSub4.loadFactor
  33  0.79% 97.26%   95133 302472 HashMapSub4$Entry.<init>
  34  0.65% 97.91%   34570 302483 java.lang.Integer.equals
  35  0.54% 98.45%   48973 302502 java.lang.Integer.intValue
  36  0.28% 98.73%   34570 302482 java.lang.Integer.intValue
  37  0.13% 98.86%    4867 302495 java.lang.RuntimeException.<init>
  38  0.11% 98.98%    4867 302494 java.lang.Exception.<init>
  39  0.10% 99.08%    4867 302493 java.lang.Throwable.<init>
  40  0.10% 99.19%    4867 302496 java.lang.IllegalArgumentException.<init>
  41  0.10% 99.28%    4867 302492 java.lang.Throwable.fillInStackTrace
  42  0.03% 99.31%       1 301104 java.util.zip.ZipFile.<init>
  43  0.02% 99.33%     932 300726 java.lang.String.charAt
  44  0.02% 99.35%      12 300757 sun.misc.URLClassPath$3.run
  45  0.02% 99.37%     294 300784 java.lang.String.startsWith
  46  0.02% 99.39%      60 300785 sun.misc.MetaIndex.mayContain
  47  0.02% 99.41%       1 300163 java.lang.invoke.MethodHandle.<clinit>
  48  0.02% 99.43%       1 300492 sun.misc.PostVMInitHook.trackJavaUsage
CPU TIME (ms) END
